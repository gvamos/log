# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias aclipse='/home/gvamos/opt/aclipse'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

#########################################################################
# George Vamos
#########################################################################

# FIX THIS

#    alias dbstart='nohup VBoxHeadless --startvm "Oracle11g32" &> /dev/null &'
#    alias dbstop='VBoxManage controlvm Oracle11g32 poweroff' 



alias m3="/usr/bin/mvn"
alias main="pushd ~/workspace/git/cjo"
alias hdp="pushd ~/workspace/git/datawarehouse/garage/src/main/vagrant/hadoop-single"
alias m3ci='m3 clean install -Dcleanup.skip=true -Ddelta.skip=true -T 1C -Dqunit:numThreads=8'
alias m3ci-notests='m3 clean install -Dcleanup.skip=true -Ddelta.skip=true -T 1C -Dqunit:numThreads=8 -DskipTests=true -Dqunit.filter=asdfasdfasdf'
alias mvn="m3"
alias mci="m3ci"
alias mci-notests="m3ci-notests"
alias mqt='m3 qunit:test -Dqunit:numThreads=8 -T 1C'
alias mqs='m3 qunit:serve '
alias m3t='m3ci -Dtest=cj.ad.advertiser.web.CreativeControllerTest'
alias m3ad='m3ci -pl=ad'
alias m311='/opt/m311/bin/mvn'
alias foo='mvn jshint:lint qunit:test -DnumThreads=8'
alias mongoq='mongo busprod101.wl.cj.com:8017/trackdb'
# db.auth('trackdb','qa\%555')
alias sbt=/home/gvamos/opt/sbt/bin/sbt
alias eclipse=/home/gvamos/opt/eclipse/eclipse
alias remoteDesktop="rdesktop la-ts101.corp.valueclick.com"
alias magicPower="addIntranetRoles 101 George Vamos"
alias displays="arandr"
alias astudio="/home/gvamos/opt/android-studio/bin/studio.sh"
alias pycharm="/home/gvamos/opt/pycharm/bin/pycharm.sh"

# PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
[[ -s '/home/gvamos/.rvm/scripts/rvm' ]] && source '/home/gvamos/.rvm/scripts/rvm'

export P4USER=gvamos
export P4PORT=p4cj.vclk.net:1666

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

function startSelenium {
    export PATH=/home/gvamos/perforce/software/firefox:$PATH
    startSelenium.sh  -v 1.0.3
}
